plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "2.2.4"
}

group = 'com.event'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

node {
	// Version of node to use.
	version = '14.15.0'

	// Version of npm to use.
	npmVersion = '6.14.8'

	// Version of Yarn to use.
	yarnVersion = '0.16.1'

	// Override the install command used by npmInstall
	npmInstallCommand = 'install'

	// Base URL for fetching node distributions (change if you have a mirror).
	// Or set to null if you want to add the repository on your own.
	distBaseUrl = 'https://nodejs.org/dist'

	// If true, it will download node using above parameters.
	// If false, it will try to use globally installed node.
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/node")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")

	// Set the work directory for Yarn
	yarnWorkDir = file("${project.buildDir}/yarn")

	// Set the work directory where node_modules should be located
	nodeModulesDir = file("${project.projectDir}")
}

task customBuild(type : NpmTask) {
	args = ['install']
}
task webpack(type: NpmTask) {
	args = ['run','watch']
}

webpack.dependsOn 'customBuild'



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.4.3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.0-M1'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.0-M1'
	testImplementation group: 'org.springframework', name: 'spring-test', version: '5.3.9'
	testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '2.2'
	implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.6.0'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
	runtimeOnly group: 'com.h2database', name: 'h2', version: '1.4.200'
}

test {
	useJUnitPlatform()
}
